apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: default

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  namespace: default
rules:
- apiGroups:
    - ""
  resources:
    - nodes
    - pods
    - endpoints
    - services
    - nodes/proxy
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - extensions
  resources:
    - ingresses
  verbs:
    - get
    - list
    - watch
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: default

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: default
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      nodeSelector:
        app: test
      serviceAccountName: prometheus
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: prometheus
          image: prom/prometheus:v2.25.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
              name: http
              protocol: TCP
          resources:
              limits:
                memory: 200Mi
              requests:
                memory: 200Mi
                cpu: 100m
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: varlog
              mountPath: /var/log
            - name: discovery
              mountPath: /data
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: discovery
          hostPath:
            path: /root/k8s.yaml/prometheus 

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: default
data:
  prometheus.yml: |-
   global:
    scrape_interval:     15s
    evaluation_interval: 15s
    #scrape_timeout:      600s
   #rule_files:
   # - "rules/*.yml"
   scrape_configs:
     - job_name: 'node'
       file_sd_configs:
       - files:
          - /data/targets/nodes*.yaml
         refresh_interval: 2m
       #static_configs:
       #- targets: ['139.196.56.88:32256']
       #scrape_interval: 15s

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: default
  labels:
    app: prometheus
spec:
  selector:
     app: prometheus
  type: NodePort
  ports:
   - name: http
     port: 9090
     nodePort: 32257
     protocol: TCP
